name: Deploy to Kubernetes

on:
  push:
    branches:
      - main  
env:
      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      ECR_REPOSITORY: usecase-10-ecr
      IMAGE_TAG: ${{ github.sha }}
      AWS_REGION: ap-south-1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_REGION: ap-south-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Build and push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: usecase-10-ecr
        IMAGE_TAG: ${{ github.sha }}
        AWS_REGION: ap-south-1
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.0'  

    - name: Update Kubernetes deployment (coredns)

      run: |
        kubectl set image deployment/coredns coredns=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update Kubernetes deployment (metrics-server)
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: usecase-10-ecr
        IMAGE_TAG: ${{ github.sha }}
        AWS_REGION: ap-south-1
      run: |
        kubectl set image deployment/metrics-server metrics-server=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
